@page "/vendor/input"
@using EventsManagementInterface.Data.Models
@using EventsManagementInterface.Data.Models.Vendor
@using EventsManagementInterface.Data.Services
@using EventsManagementInterface.Data.Enums
@inject VendorService vendorService

<PageTitle>Vendor Input</PageTitle>
<input type="button" value="Add Guest" class="btn btn-primary col-2" @onclick="() => ShowMenuModal()">
<form @onsubmit="SubmitVendorInput">
    <div class="card-custom p-3">
        <div class="card-body-custom">
            <div class="row mb-3  justify-content-center mt-2">
                <div class="form-group col-lg-2 col-md-4 col-sm-4 text-center">
                    <label for="vendorInputGuestIndentificationNumber">Guest Identification Number</label>
                    <input type="number" min="1000" max="9999" class="form-control text-center" id="vendorInputGuestIndentificationNumber" @bind-value="vendorInput.GuestIdentificationNumber">
                </div>
                <div class="form-group col-lg-12 col-sm-12">
                    <div class="row justify-content-center mt-2">
                        <button class="vendor-input-button" type="button" @onclick="() => InsertGuestIdentificationNumber(1)">1</button>
                        <button class="vendor-input-button" type="button" @onclick="() => InsertGuestIdentificationNumber(2)">2</button>
                        <button class="vendor-input-button" type="button" @onclick="() => InsertGuestIdentificationNumber(3)">3</button>
                    </div>
                    <div class="row justify-content-center mt-2">
                        <button class="vendor-input-button" type="button" @onclick="() => InsertGuestIdentificationNumber(4)">4</button>
                        <button class="vendor-input-button" type="button" @onclick="() => InsertGuestIdentificationNumber(5)">5</button>
                        <button class="vendor-input-button" type="button" @onclick="() => InsertGuestIdentificationNumber(6)">6</button>
                    </div>
                    <div class="row justify-content-center mt-2">
                        <button class="vendor-input-button" type="button" @onclick="() => InsertGuestIdentificationNumber(7)">7</button>
                        <button class="vendor-input-button" type="button" @onclick="() => InsertGuestIdentificationNumber(8)">8</button>
                        <button class="vendor-input-button" type="button" @onclick="() => InsertGuestIdentificationNumber(9)">9</button>
                    </div>
                    <div class="row justify-content-center mt-2">
                        <button class="vendor-input-button" type="button" style="background-color: darkred !important;" @onclick="() => ClearInput()"><span class="oi oi-x" aria-hidden="true"></span></button>
                        <button class="vendor-input-button" type="button" @onclick="() => InsertGuestIdentificationNumber(3)">0</button>
                        <button class="vendor-input-button" type="button" style="background-color: orange !important;" @onclick="() => CheckTokenAllowance()"><span class="oi oi-magnifying-glass" aria-hidden="true"></span></button>
                    </div>
                    <div class="row justify-content-center mt-2">                        
                        <button class="vendor-input-submit-button" type="button" style="background-color: darkgreen !important;" @onclick="() => SubmitVendorInput()"><span class="oi oi-check" aria-hidden="true"></span></button>
                    </div>
                </div>

                <div class="form-group col-lg-12 col-sm-12">
                    <label for="vendorInputAlcoholicDrinks">Alcoholic Drink(s)</label>
                    <select class="form-control" id="vendorInputAlcoholicDrinks" @bind="vendorInput.AlcoholicDrinkToken">
                        <option selected="selected">0</option>
                        @for (int i = 1; i < 11; i++)
                        {
                            <option value="@i">@i</option>
                        }
                    </select>
                </div>
                <div class="form-group col-lg-12 col-sm-12">
                    <label for="vendorInputNonAlcoholicDrinks">Non-Alcoholic Drink(s)</label>
                    <select class="form-control" id="vendorInputNonAlcoholicDrinks" @bind="vendorInput.NonAlcoholicDrinkToken">
                        <option selected="selected">0</option>
                        @for (int i = 1; i < 11; i++)
                        {
                            <option value="@i">@i</option>
                        }
                    </select>
                </div>
                <div class="form-group col-lg-12 col-sm-12">
                    <label for="vendorInputFood">Food</label>
                    <select class="form-control" id="vendorInputFood" @bind="vendorInput.FoodToken">
                        <option selected="selected">0</option>
                        @for (int i = 1; i < 11; i++)
                        {
                            <option value="@i">@i</option>
                        }
                    </select>
                </div>
            </div>

            <input type="submit" class="btn btn-primary" value="Submit" />
        </div>
    </div>
</form>

<Modal @ref="modal">
    <ModalContent Size="ModalSize.Large">
        <ModalHeader>
            <ModalTitle>@baseModal.Title</ModalTitle>
        </ModalHeader>
        <ModalBody>
            <Field>
                <FieldLabel Style="font-weight:100">@baseModal.Message</FieldLabel>
            </Field>
            <Div Class="mb-2"></Div>
            @if (baseModal.Success)
            {
                <Field>
                    <FieldLabel>Tokens Remaining:</FieldLabel>
                    <UnorderedList>
                        @foreach (string tokens in baseModal.TokensRemaining)
                        {
                            <UnorderedListItem>@tokens</UnorderedListItem>
                        }
                    </UnorderedList>
                </Field>
            }
            else
            {
                <Field>
                    <UnorderedList>
                        @foreach (string error in baseModal.Errors)
                        {
                            <UnorderedListItem>@error</UnorderedListItem>
                        }
                    </UnorderedList>
                </Field>
            }
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="@HideModal">Close</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

<Modal @ref="menuModal">
    <ModalContent Size="ModalSize.Large">
        <ModalHeader>
            <ModalTitle>Menu</ModalTitle>
        </ModalHeader>
        <ModalBody>
            <div class="mt-2 text-center">
                <h5>Beers - Draught</h5>
            </div>
            <div class="row justify-content-center mt-2">
                <button class="vendor-input-menu-button" type="button" @onclick="() => AddToOrder(Drink.MADRI_LAGER_PINT, 5.00)">Madri Lager (Pint)</button>
                <button class="vendor-input-menu-button" type="button" @onclick="() => AddToOrder(Drink.NECK_OIL_IPA_PINT, 5.00)">Neck Oil IPA (Pint)</button>
                <button class="vendor-input-menu-button" type="button" @onclick="() => AddToOrder(Drink.MADRI_LAGER_HALF_PINT, 2.50)">Madri Lager (Half-pint)</button>
                <button class="vendor-input-menu-button" type="button" @onclick="() => AddToOrder(Drink.NECK_OIL_IPA_HALF_PINT, 2.50)">Neck Oil IPA (Half-pint)</button>
            </div>

            <div class="mt-3 text-center">
                <h5>Beers & Ciders - Bottles</h5>
            </div>
            <div class="row justify-content-center mt-2">
                <button class="vendor-input-menu-button" type="button" @onclick="() => AddToOrder(Drink.HEINEKEN_ZERO, 3.50)">Heineken Zero</button>
                <button class="vendor-input-menu-button" type="button" @onclick="() => AddToOrder(Drink.ASPALLS_CIDER, 5.00)">Aspalls Cider</button>
                <button class="vendor-input-menu-button" type="button" @onclick="() => AddToOrder(Drink.KOPPARBERG_MIXED_FRUITS, 5.00)">Kopparberg - Mixed Fruits</button>
            </div>

            <div class="mt-3 text-center">
                <h5>Spirits & Mixers</h5>
            </div>
            <div class="row justify-content-center mt-2">
                <button class="vendor-input-menu-button" type="button" @onclick="() => AddToOrder(Drink.SMIRNOFF_RED_VODKA, 5.00)">Smirnoff Red Vodka</button>
                <button class="vendor-input-menu-button" type="button" @onclick="() => AddToOrder(Drink.GORDONS_GIN, 5.00)">Gordons Gin</button>
                <button class="vendor-input-menu-button" type="button" @onclick="() => AddToOrder(Drink.BACARDI, 5.00)">Bacardi</button>
                <button class="vendor-input-menu-button" type="button" @onclick="() => AddToOrder(Drink.JACK_DANIELS, 5.00)">Jack Daniels</button>
                <button class="vendor-input-menu-button" type="button" @onclick="() => AddToOrder(Drink.MORGANS_SPICED_RUM, 5.00)">Morgan's Spiced Rum'</button>
                <button class="vendor-input-menu-button" type="button" @onclick="() => AddToOrder(Drink.MALIBU, 5.00)">Malibu</button>
            </div>

            <div class="mt-3 text-center">
                <h5>Specialist Drinks</h5>
            </div>
            <div class="row justify-content-center mt-2">
                <button class="vendor-input-menu-button" type="button" @onclick="() => AddToOrder(Drink.GORDONS_PINK_GIN, 5.50)">Gordons Pink Gin</button>
                <button class="vendor-input-menu-button" type="button" @onclick="() => AddToOrder(Drink.WHITLEY_NEILL_SELECTION, 5.50)">Whitley Neill Selection</button>
                <button class="vendor-input-menu-button" type="button" @onclick="() => AddToOrder(Drink.PIMMS_AND_LEMONADE, 4.50)">Pimms & Lemonade</button>
            </div>

            <div class="mt-3 text-center">
                <h5>Soft Drinks</h5>
            </div>
            <div class="row justify-content-center mt-2">
                <button class="vendor-input-menu-button" type="button" @onclick="() => AddToOrder(Drink.LEMONADE, 1.00)">Lemonade</button>
                <button class="vendor-input-menu-button" type="button" @onclick="() => AddToOrder(Drink.COKE, 1.00)">Coke</button>
                <button class="vendor-input-menu-button" type="button" @onclick="() => AddToOrder(Drink.FRUIT_SHOOT, 1.00)">Fruit Shoot</button>
                <button class="vendor-input-menu-button" type="button" @onclick="() => AddToOrder(Drink.ORANGE, 1.00)">Orange</button>
                <button class="vendor-input-menu-button" type="button" @onclick="() => AddToOrder(Drink.WATER, 1.00)">Water</button>
            </div>

            <div class="mt-3 text-center">
                <h5>Wines & Fizz</h5>
            </div>
            <div class="row justify-content-center mt-2">
                <button class="vendor-input-menu-button" type="button" @onclick="() => AddToOrder(Drink.PROSECCO, 4.50)">Prosecco</button>
                <button class="vendor-input-menu-button" type="button" @onclick="() => AddToOrder(Drink.RED_WINE, 4.50)">Red Wine</button>
                <button class="vendor-input-menu-button" type="button" @onclick="() => AddToOrder(Drink.WHITE_WINE, 4.50)">White Wine</button>
            </div>
        </ModalBody>
        <ModalFooter>
            @*<Button Color="Color.Secondary" Clicked="@HideAttendeeModal">Close</Button>
            <input type="button" class="btn btn-primary" value="Save" @onclick="() => SaveAttendee(attendee)">*@
        </ModalFooter>
    </ModalContent>
</Modal>

@code {
    private VendorInput vendorInput;
    private Modal modal;
    private Modal menuModal;
    private BaseModal baseModal;
    private List<Order> orders = new List<Order>();

    protected override async Task OnInitializedAsync()
    {
        vendorInput = new VendorInput();
        baseModal = new BaseModal();
        baseModal.Errors = new List<string>();
    }

    private Task ShowModal()
    {
        return modal.Show();
    }

    private Task HideModal()
    {
        return modal.Hide();
    }

    private Task ShowMenuModal()
    {
        return menuModal.Show();
    }

    private Task HideMenuModal()
    {
        return menuModal.Hide();
    }

    private async Task CheckTokenAllowance()
    {
        baseModal = await vendorService.CheckTokenAllowance(vendorInput);
        ShowModal();
    }    

    public async Task SubmitVendorInput()
    {
        baseModal = await vendorService.SubmitVendorInput(vendorInput);

        ShowModal();

        if (baseModal.Success)
        {
            vendorInput = new VendorInput();
        }
    }

    private void InsertGuestIdentificationNumber(int input) {
        int? integer = null;

        if (vendorInput.GuestIdentificationNumber > 999)
        {
            vendorInput.GuestIdentificationNumber = 0;
            return;
        }

        if (vendorInput.GuestIdentificationNumber == 0)
        {
            integer = int.Parse(vendorInput.GuestIdentificationNumber.ToString() + input.ToString());
            vendorInput.GuestIdentificationNumber = integer.Value;
        }
        else
        {
            vendorInput.GuestIdentificationNumber = int.Parse(vendorInput.GuestIdentificationNumber.ToString() + input.ToString());
        }
    }

    private void ClearInput()
    {
        vendorInput.GuestIdentificationNumber = 0;
        vendorInput.AlcoholicDrinkToken = 0;
        vendorInput.NonAlcoholicDrinkToken = 0;
        vendorInput.FoodToken = 0;
    }

    private Task AddToOrder(Drink drink, double price)
    {
        Order order = new Order
            {
                Name = drink.ToString(),
                Price = price,
                GuestIdentificationNumber = vendorInput.GuestIdentificationNumber,
            };

            return null;
    }
}

