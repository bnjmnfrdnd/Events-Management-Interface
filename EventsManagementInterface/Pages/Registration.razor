@page "/Registration"
@using EventsManagementInterface.Data.Models
@using EventsManagementInterface.Data.Services
@inject RegistrationService registrationService

<PageTitle>Attendance Registration</PageTitle>

<form @onsubmit="SubmitAttendanceRegistration">
    <div class="card-custom p-5">
        <div class="card-body-custom">
            <h3 class="mb-2">Hello, please register your attendance.</h3>
            <div class="row mb-3 mt-3">
                <div class="form-group col-lg-12 col-sm-12">
                    <label for="registrationFirstName">First name</label>
                    <input type="text" class="form-control" id="registrationFirstName" @bind-value="registration.FirstName" style="text-transform:capitalize !important;">
                </div>
            </div>
            <div class="row mb-3">
                <div class="form-group col-lg-12 col-sm-12">
                    <label for="registrationMiddleName">Middle name(s)</label>
                    <input type="text" class="form-control" id="registrationMiddleName" @bind-value="registration.MiddleName" style="text-transform:capitalize !important;">
                </div>
            </div>
            <div class="row mb-3">
                <div class="form-group col-lg-12 col-sm-12">
                    <label for="registrationLastName">Last name</label>
                    <input type="text" class="form-control" id="registrationLastName" @bind-value="registration.LastName" style="text-transform:capitalize !important;">
                </div>
            </div>
            <div class="row mb-3">
                <div class="form-group col-lg-12 col-sm-12">
                    <label for="registrationDateOfBirth">Date of birth</label>
                    <input type="date" class="form-control" id="registrationDateOfBirth" @bind-value="registration.DateOfBirth">
                </div>
            </div>
            <div class="row mb-3">
                <div class="form-group col-lg-12 col-sm-12">
                    <label for="registrationEmailAddress">Email address</label>
                    <input type="text" class="form-control" id="registrationEmailAddress" @bind-value="registration.EmailAddress">
                </div>
            </div>
            <div class="row">
                <div class="form-group col-lg-12 col-sm-12">
                    <label for="registrationNumberOfGuests">Number of guests</label>
                    <select class="form-control" id="registrationNumberOfGuests" @bind="registration.NumberOfGuests">
                        @for(int i = 1; i < 11; i++)
                        {
                            <option value="@i">@i</option>
                        }
                    </select>
                </div>
            </div>

            <input type="submit" class="btn btn-primary" value="Submit" />
        </div>
    </div>
</form>

<Modal @ref="registrationOutcome">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle>@registrationModal.Title</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            <Field>
                <FieldLabel>@registrationModal.Message</FieldLabel>
                
            </Field>
            <Field>
                <FieldLabel>Surname</FieldLabel>
                <TextEdit Placeholder="Enter surname..." />
            </Field>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="@HideModal">Close</Button>
        </ModalFooter>
    </ModalContent>
</Modal>


@code {
    private EventsManagementInterface.Data.Models.Registration registration;
    private Modal registrationOutcome;
    private RegistrationModal registrationModal;

    private Task ShowModal()
    {
        return registrationOutcome.Show();
    }

    private Task HideModal()
    {
        return registrationOutcome.Hide();
    }

    protected override async Task OnInitializedAsync()
    {
        registration = new EventsManagementInterface.Data.Models.Registration();
    }

    public async Task SubmitAttendanceRegistration()
    {
        if (await registrationService.RegisterAttendee(registration))
        {
            ShowModal();
        }

    }
}